<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxs.ssm.mybatis.mapper.BookMapper">
    <!--定义⼀个映射：⼀个表映射到⼀个java类(com.cxs.ssm.mybatis.model.Book)-->
    <!--表的列名称(column)跟java模型类属性名称(property)完全⼀样,可以不⽤做映射-->
    <!--如果不⼀样,则需要做映射-->
    <resultMap id="bookResultMapper"
               type="com.cxs.ssm.mybatis.model.Book">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DOUBLE"/>
    </resultMap>

    <!--如果不需要映射转换的话用(resultType)直接转到模型类(com.cxs.ssm.mybatis.model.Book)-->
    <!--根据图书编号(id)获取图书信息 -->
    <select id="findBookById" parameterType="Integer"
            resultMap="bookResultMapper">
        select * from BOOKS where id = #{id};
    </select>

    <!--根据图书名模糊查询图书信息列表，用concat把字符串参数拼装连接起来-->
    <select id="findBookByName" parameterType="String"
            resultType="com.cxs.ssm.mybatis.model.Book">
        <!--select * from BOOKS where LOWER(name) like concat('%',LOWER(#{value}),'%');-->
        select * from BOOKS where name like concat('%',#{name},'%');
    </select>

    <select id="findBookNameById" resultType="String" parameterType="Integer">
        select name from books where id=#{id};
    </select>

    <!--查询所有图书信息列表-->
    <select id="findAllBook"
            resultMap="bookResultMapper">
        select * from BOOKS;
    </select>

    <!-- 添加图书信息 ,插入用insert标签,#{}里的名称是Java类中的属性名称-->
    <insert id="addBook"
            parameterType="com.cxs.ssm.mybatis.model.Book">
        insert into BOOKS(name,publisher,price)
         values(#{name},#{publisher},#{price});
    </insert>

    <!-- 更新图书信息 ,修改用update标签-->
    <update id="updateBook"
            parameterType="com.cxs.ssm.mybatis.model.Book">
        update BOOKS set name=#{name},
                         publisher=#{publisher},
                         price=#{price}
        where id=#{id};
    </update>

    <!-- 删除图书 ，删除用delete标签-->
    <delete id="deleteBook" parameterType="Integer">
        delete from BOOKS where id=#{id};
    </delete>

</mapper>